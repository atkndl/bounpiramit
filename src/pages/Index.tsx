import { QuickActions } from "@/components/QuickActions";
import { EventCard } from "@/components/EventCard";
import { PostCard } from "@/components/PostCard";
import { AnnouncementCard } from "@/components/AnnouncementCard";
import { LostItemCard } from "@/components/LostItemCard";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useAuth } from "@/hooks/useAuth";
import { ArrowRight, TrendingUp, LogIn } from "lucide-react";

// Mock data - will be replaced with actual data later
const mockEvents = [
  {
    title: "Yazƒ±lƒ±m Geli≈ütirme At√∂lyesi",
    clubName: "Bilgisayar Kul√ºb√º",
    date: "15 Aralƒ±k 2024",
    time: "14:00",
    location: "ETA A1",
    description: "React ve Node.js kullanarak full-stack web uygulamasƒ± geli≈ütirme",
    attendees: 45,
    category: "Teknoloji"
  },
  {
    title: "Kƒ±≈ü Konseri",
    clubName: "M√ºzik Kul√ºb√º",
    date: "18 Aralƒ±k 2024", 
    time: "19:30",
    location: "Albert Long Hall",
    description: "Klasik ve √ßaƒüda≈ü eserlerin bulu≈ütuƒüu m√ºzik ziyafeti",
    attendees: 120,
    category: "M√ºzik"
  }
];

const mockPosts = [
  {
    authorName: "Ahmet Yƒ±lmaz",
    authorEmail: "ahmet.yilmaz@std.bogazici.edu.tr",
    content: "Final haftasƒ± yakla≈üƒ±rken herkese ba≈üarƒ±lar! K√ºt√ºphane √ßok kalabalƒ±k, grup √ßalƒ±≈ümasƒ± i√ßin sessiz mekanlar arƒ±yorum. √ñnerisi olan var mƒ±?",
    timestamp: "2 saat √∂nce",
    likes: 24,
    comments: 8,
    isLiked: false
  },
  {
    authorName: "Zeynep Kaya",
    authorEmail: "zeynep.kaya@std.bogazici.edu.tr",
    content: "Bug√ºn kamp√ºste g√∂rd√ºƒü√ºm kedinin fotoƒürafƒ±nƒ± payla≈üƒ±yorum. O kadar tatlƒ± ki! üê± Kamp√ºsteki hayvanlar ger√ßekten √ßok ≈üanslƒ±.",
    timestamp: "4 saat √∂nce",
    likes: 56,
    comments: 12,
    isLiked: true
  }
];

const mockAnnouncements = [
  {
    title: "Kƒ±≈ü Tatili Duyurusu",
    content: "Kƒ±≈ü tatili 23 Aralƒ±k 2024 tarihinde ba≈ülayacak ve 10 ≈ûubat 2025 tarihinde sona erecektir. Detaylƒ± bilgi i√ßin √∂ƒürenci i≈üleri web sitesini ziyaret edin.",
    category: "Akademik",
    timestamp: "6 saat √∂nce",
    priority: "high" as const,
    isNew: true
  },
  {
    title: "Yemekhanede Yeni Men√º",
    content: "15 Aralƒ±k'tan itibaren yemekhanede yeni vegan se√ßenekler sunulmaya ba≈ülanacak. Beslenme uzmanlarƒ±mƒ±z tarafƒ±ndan hazƒ±rlanan men√ºler saƒülƒ±klƒ± ve lezzetli.",
    category: "Kamp√ºs",
    timestamp: "1 g√ºn √∂nce",
    priority: "medium" as const
  }
];

const mockLostItems = [
  {
    itemName: "iPhone 13 Pro",
    location: "G√ºney Kamp√ºs K√ºt√ºphanesi",
    timestamp: "3 saat √∂nce",
    type: "lost" as const,
    contactInfo: "mehmet.oz@std.bogazici.edu.tr",
    description: "Siyah renk, mavi kƒ±lƒ±flƒ±. K√ºt√ºphanenin 2. katƒ±nda unutmu≈üum."
  },
  {
    itemName: "Matematik Kitabƒ±", 
    location: "ETA Binasƒ±",
    timestamp: "5 saat √∂nce",
    type: "found" as const,
    contactInfo: "ayse.demir@std.bogazici.edu.tr",
    description: "Calculus kitabƒ±, i√ßinde notlar var. ETA giri≈üinde buldum."
  }
];

const Index = () => {
  const { user } = useAuth();
  
  return (
    <div className="flex-1 overflow-auto">
      {/* Header */}
      <div className="bg-gradient-to-r from-primary to-primary-light text-white p-6 shadow-lg">
        <div className="max-w-7xl mx-auto flex justify-between items-center">
          <div>
            <h1 className="text-3xl font-bold mb-2">
              {user ? `Ho≈ü Geldin! üëã` : 'Boƒüazi√ßi Piramit'}
            </h1>
            <p className="text-primary-foreground/90">
              {user ? 'Bug√ºn kamp√ºste neler oluyor?' : '√ñƒürenci topluluƒüunun merkezi'}
            </p>
          </div>
          {!user && (
            <Button 
              variant="secondary" 
              className="bg-white text-primary hover:bg-white/90"
              onClick={() => window.location.href = '/auth'}
            >
              <LogIn className="w-4 h-4 mr-2" />
              Giri≈ü Yap
            </Button>
          )}
        </div>
      </div>

      <div className="max-w-7xl mx-auto p-6 space-y-8">
        {/* Quick Actions */}
        <QuickActions />

        {/* Main Content Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Left Column - Events and Posts */}
          <div className="lg:col-span-2 space-y-8">
            {/* Today's Events */}
            <Card className="shadow-card">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle className="flex items-center space-x-2">
                  <span>Bug√ºn√ºn Etkinlikleri</span>
                  <TrendingUp className="w-5 h-5 text-primary" />
                </CardTitle>
                <Button variant="ghost" size="sm" className="text-primary">
                  T√ºm√ºn√º G√∂r <ArrowRight className="w-4 h-4 ml-1" />
                </Button>
              </CardHeader>
              <CardContent className="space-y-4">
                {mockEvents.map((event, index) => (
                  <EventCard key={index} {...event} />
                ))}
              </CardContent>
            </Card>

            {/* Popular Posts */}
            <Card className="shadow-card">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle>Pop√ºler Payla≈üƒ±mlar</CardTitle>
                <Button variant="ghost" size="sm" className="text-primary">
                  Piramit'e Git <ArrowRight className="w-4 h-4 ml-1" />
                </Button>
              </CardHeader>
              <CardContent className="space-y-4">
                {mockPosts.map((post, index) => (
                  <PostCard key={index} {...post} />
                ))}
              </CardContent>
            </Card>
          </div>

          {/* Right Column - Announcements and Lost Items */}
          <div className="space-y-8">
            {/* Announcements */}
            <Card className="shadow-card">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle>Duyurular</CardTitle>
                <Button variant="ghost" size="sm" className="text-primary">
                  T√ºm√º <ArrowRight className="w-4 h-4 ml-1" />
                </Button>
              </CardHeader>
              <CardContent className="space-y-4">
                {mockAnnouncements.map((announcement, index) => (
                  <AnnouncementCard key={index} {...announcement} />
                ))}
              </CardContent>
            </Card>

            {/* Lost Items */}
            <Card className="shadow-card">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle>Son Kayƒ±p E≈üyalar</CardTitle>
                <Button variant="ghost" size="sm" className="text-primary">
                  T√ºm√º <ArrowRight className="w-4 h-4 ml-1" />
                </Button>
              </CardHeader>
              <CardContent className="space-y-4">
                {mockLostItems.map((item, index) => (
                  <LostItemCard key={index} {...item} />
                ))}
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;
